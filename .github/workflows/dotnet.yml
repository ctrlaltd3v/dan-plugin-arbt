name: dan-plugin-arbt

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '**/*.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  ROOT_SOLUTION_PATH: ./
  AZURE_FUNCTIONAPP_NAME: func-esarbt-test-dev # set this to the name of your azure function app resource
  AZURE_FUNCTION_PROJ_PATH: src/Altinn.Dan.Plugin.Arbeidstilsynet  # set this to the path to your function app project
  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/nadobe/Nadobe/_packaging/Packages/nuget/v3/index.json
  BUILD_CONFIGURATION: 'Release'    # set this to the appropriate build configuration
  RESOURCE_GROUP_TEST: 'rg-arbt-es-test' 
  SLOT_NAME_SOURCE: 'production'
  SLOT_NAME_TARGET: 'qa'
  DOTNET_VERSION: '6.0.x'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: 'Get the latest source code'
        uses: actions/checkout@v2

      - name: 'Setup .NET'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PAT }}

      - name: 'Restore, build & test'
        run: |
          dotnet restore
          dotnet build --no-restore
          dotnet test --no-build --verbosity normal
        working-directory: ${{ env.ROOT_SOLUTION_PATH }}

      - name: 'Build and publish Function App for Release'
        run: |
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'
          dotnet publish -c '${{ env.BUILD_CONFIGURATION }}' --no-restore -o './published-app'
        working-directory: ${{ env.AZURE_FUNCTION_PROJ_PATH }}

      - name: 'Publish artifact'
        uses: actions/upload-artifact@v2
        with:
          name: dan-plugin-arbt
          path: ${{ env.AZURE_FUNCTION_PROJ_PATH }}/published-app

  deploy-dev:
    runs-on: ubuntu-latest
    environment: 'dev'
    needs: build-and-publish
    steps:     
      - name: 'Download artifact'
        uses: actions/download-artifact@v2
        with:
          name: dan-plugin-arbt
          path: './published-app'

      - name: 'Deploy to dev'
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: './published-app'
          publish-profile: ${{ secrets.AZURE_FUNCTION_PUBLISH_CREDS }}

  swap-dev:
    runs-on: ubuntu-latest
    environment: 'staging'
    needs: [build-and-publish, deploy-dev]
    steps:
      - name: 'Login via Azure CLI' 
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Swap dev and qa
        run: |
          az webapp deployment slot swap -g '${{ env.RESOURCE_GROUP_TEST }}' -n '${{ env.AZURE_FUNCTIONAPP_NAME }}' --slot '${{ env.SLOT_NAME_SOURCE }}' --target-slot '${{ env.SLOT_NAME_TARGET }}'
